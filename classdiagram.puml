@@startuml

title "Proposition for architecture"

abstract Manipulator{
    name
    image
    procMillis = 0 
    --
    ready = pyqtSignal()
    message = pyqtSignal(str)  # Message signal
    ready = pyqtSignal()
    __init__()
}

class ImgEnhancer{
    image
    --
    ImgUpdate()
    run()
    setRotateAngle(angle)
    setGamma(val)
    setClaheClipLimit(val)
    setCrop(point,val)
}

class ImgSegmenter{
    image
    ROIs
    --
    start(image)
}

class BlobDetector{
    image
    BlobData
    --
    start(image, ROIs)
    setOffset(val)
    setBlockSize(val)
    adjust_gamma(image, gamma=1.0)
    rotateImage(image, angle)
    moving_average(x, N=5)
    find1DGrid(data, N)
}

class Image{
    image
    RoI
    rectsList
    ImgEnhancer
    ImgSegmentor
    ImgDetector
    --
    start()
    getBlobs()
}

class CentroidTracker{
    nextObjectID
	objects 
	disappeared
	euclideanDis
    --
    register(centroid)
    deregister(objectID)
    getEuclideans()
    update(rects)
}

class MainWindow{
    name
    closing
    message
    image
    --
    __init__()
    initUI()
    imgUpdate()
    kickTimer()
    temperatureUpdate(temp)
    wheelEvent(event)
    closeEvent(event)
    snapshot()
    loadSettings()
    saveSettings()
}

BlobDetector -up-|> Manipulator
ImgEnhancer -up-|> Manipulator
ImgSegmenter -up-|> Manipulator
BlobDetector --* Image
ImgSegmenter --* Image
ImgEnhancer --* Image
Image <.right. CentroidTracker
Image -left-o MainWindow
@@enduml